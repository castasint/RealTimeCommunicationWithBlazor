@inject  HttpClient HttpClient



<EditForm Model="@comment" class="form mt-2">
    <div class="form-group row">
        <label for="author" class="col-sm-2 col-form-label">Name</label>
        <div class="col-sm-10">
            <InputText @bind-Value="@comment.Author" class="form-control" placeholder="Your Name.." />
        </div>
    </div>
    <div class="form-group row">
        <label for="comment" class="col-sm-2 col-form-label">Comment</label>
        <div class="col-sm-10">
            <InputTextArea @bind-Value="@comment.Text" class="form-control mt-1" placeholder="Your Comment.." />
        </div>
    </div>
<button type="button" class="btn btn-myfavblue text-white" @onclick="AddComment">Add Comment</button>
</EditForm>

@code {
    private RealTimeCommunicationWithBlazor.Shared.Comment comment;


    [Parameter]
    public int BlogId { get; set; }

    protected override Task OnInitializedAsync()
    {
        comment = new RealTimeCommunicationWithBlazor.Shared.Comment();
        comment.BlogId = BlogId;
        return base.OnInitializedAsync();
    }
    private void AddComment()
    {

        Console.WriteLine("Submit Button Clicked");

        //Do some validation & then post

        HttpClient.PostAsJsonAsync<RealTimeCommunicationWithBlazor.Shared.Comment>("api/Comments", comment);

        comment = new RealTimeCommunicationWithBlazor.Shared.Comment();
        comment.BlogId = BlogId;

    }

}
